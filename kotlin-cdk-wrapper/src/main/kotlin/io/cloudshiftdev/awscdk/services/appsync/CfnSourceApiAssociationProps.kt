@file:Suppress("RedundantVisibilityModifier","RedundantUnitReturnType","RemoveRedundantQualifierName","unused","UnusedImport","ClassName","REDUNDANT_PROJECTION","DEPRECATION")

package io.cloudshiftdev.awscdk.services.appsync

import io.cloudshiftdev.awscdk.IResolvable
import io.cloudshiftdev.awscdk.common.CdkDslMarker
import io.cloudshiftdev.awscdk.common.CdkObject
import io.cloudshiftdev.awscdk.common.CdkObjectWrappers
import kotlin.Any
import kotlin.String
import kotlin.Unit
import kotlin.jvm.JvmName

/**
 * Properties for defining a `CfnSourceApiAssociation`.
 *
 * Example:
 *
 * ```
 * // The code below shows an example of how to instantiate this type.
 * // The values are placeholders you should change.
 * import io.cloudshiftdev.awscdk.services.appsync.*;
 * CfnSourceApiAssociationProps cfnSourceApiAssociationProps =
 * CfnSourceApiAssociationProps.builder()
 * .description("description")
 * .mergedApiIdentifier("mergedApiIdentifier")
 * .sourceApiAssociationConfig(SourceApiAssociationConfigProperty.builder()
 * .mergeType("mergeType")
 * .build())
 * .sourceApiIdentifier("sourceApiIdentifier")
 * .build();
 * ```
 *
 * [Documentation](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-sourceapiassociation.html)
 */
public interface CfnSourceApiAssociationProps {
  /**
   * The description field of the association configuration.
   *
   * [Documentation](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-sourceapiassociation.html#cfn-appsync-sourceapiassociation-description)
   */
  public fun description(): String? = unwrap(this).getDescription()

  /**
   * The identifier of the AppSync Merged API.
   *
   * This is generated by the AppSync service. In most cases, Merged APIs (especially in your
   * account) only require the API ID value or ARN of the merged API. However, Merged APIs from other
   * accounts (cross-account use cases) strictly require the full resource ARN of the merged API.
   *
   * [Documentation](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-sourceapiassociation.html#cfn-appsync-sourceapiassociation-mergedapiidentifier)
   */
  public fun mergedApiIdentifier(): String? = unwrap(this).getMergedApiIdentifier()

  /**
   * The `SourceApiAssociationConfig` object data.
   *
   * [Documentation](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-sourceapiassociation.html#cfn-appsync-sourceapiassociation-sourceapiassociationconfig)
   */
  public fun sourceApiAssociationConfig(): Any? = unwrap(this).getSourceApiAssociationConfig()

  /**
   * The identifier of the AppSync Source API.
   *
   * This is generated by the AppSync service. In most cases, source APIs (especially in your
   * account) only require the API ID value or ARN of the source API. However, source APIs from other
   * accounts (cross-account use cases) strictly require the full resource ARN of the source API.
   *
   * [Documentation](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-sourceapiassociation.html#cfn-appsync-sourceapiassociation-sourceapiidentifier)
   */
  public fun sourceApiIdentifier(): String? = unwrap(this).getSourceApiIdentifier()

  /**
   * A builder for [CfnSourceApiAssociationProps]
   */
  @CdkDslMarker
  public interface Builder {
    /**
     * @param description The description field of the association configuration.
     */
    public fun description(description: String)

    /**
     * @param mergedApiIdentifier The identifier of the AppSync Merged API.
     * This is generated by the AppSync service. In most cases, Merged APIs (especially in your
     * account) only require the API ID value or ARN of the merged API. However, Merged APIs from other
     * accounts (cross-account use cases) strictly require the full resource ARN of the merged API.
     */
    public fun mergedApiIdentifier(mergedApiIdentifier: String)

    /**
     * @param sourceApiAssociationConfig The `SourceApiAssociationConfig` object data.
     */
    public fun sourceApiAssociationConfig(sourceApiAssociationConfig: IResolvable)

    /**
     * @param sourceApiAssociationConfig The `SourceApiAssociationConfig` object data.
     */
    public
        fun sourceApiAssociationConfig(sourceApiAssociationConfig: CfnSourceApiAssociation.SourceApiAssociationConfigProperty)

    /**
     * @param sourceApiAssociationConfig The `SourceApiAssociationConfig` object data.
     */
    @kotlin.Suppress("INAPPLICABLE_JVM_NAME")
    @JvmName("f36c99d6f20840e2adccb4a003ba4d54fceb155ce46ed90de4890c776de06f32")
    public
        fun sourceApiAssociationConfig(sourceApiAssociationConfig: CfnSourceApiAssociation.SourceApiAssociationConfigProperty.Builder.() -> Unit)

    /**
     * @param sourceApiIdentifier The identifier of the AppSync Source API.
     * This is generated by the AppSync service. In most cases, source APIs (especially in your
     * account) only require the API ID value or ARN of the source API. However, source APIs from other
     * accounts (cross-account use cases) strictly require the full resource ARN of the source API.
     */
    public fun sourceApiIdentifier(sourceApiIdentifier: String)
  }

  private class BuilderImpl : Builder {
    private val cdkBuilder:
        software.amazon.awscdk.services.appsync.CfnSourceApiAssociationProps.Builder =
        software.amazon.awscdk.services.appsync.CfnSourceApiAssociationProps.builder()

    /**
     * @param description The description field of the association configuration.
     */
    override fun description(description: String) {
      cdkBuilder.description(description)
    }

    /**
     * @param mergedApiIdentifier The identifier of the AppSync Merged API.
     * This is generated by the AppSync service. In most cases, Merged APIs (especially in your
     * account) only require the API ID value or ARN of the merged API. However, Merged APIs from other
     * accounts (cross-account use cases) strictly require the full resource ARN of the merged API.
     */
    override fun mergedApiIdentifier(mergedApiIdentifier: String) {
      cdkBuilder.mergedApiIdentifier(mergedApiIdentifier)
    }

    /**
     * @param sourceApiAssociationConfig The `SourceApiAssociationConfig` object data.
     */
    override fun sourceApiAssociationConfig(sourceApiAssociationConfig: IResolvable) {
      cdkBuilder.sourceApiAssociationConfig(sourceApiAssociationConfig.let(IResolvable.Companion::unwrap))
    }

    /**
     * @param sourceApiAssociationConfig The `SourceApiAssociationConfig` object data.
     */
    override
        fun sourceApiAssociationConfig(sourceApiAssociationConfig: CfnSourceApiAssociation.SourceApiAssociationConfigProperty) {
      cdkBuilder.sourceApiAssociationConfig(sourceApiAssociationConfig.let(CfnSourceApiAssociation.SourceApiAssociationConfigProperty.Companion::unwrap))
    }

    /**
     * @param sourceApiAssociationConfig The `SourceApiAssociationConfig` object data.
     */
    @kotlin.Suppress("INAPPLICABLE_JVM_NAME")
    @JvmName("f36c99d6f20840e2adccb4a003ba4d54fceb155ce46ed90de4890c776de06f32")
    override
        fun sourceApiAssociationConfig(sourceApiAssociationConfig: CfnSourceApiAssociation.SourceApiAssociationConfigProperty.Builder.() -> Unit):
        Unit =
        sourceApiAssociationConfig(CfnSourceApiAssociation.SourceApiAssociationConfigProperty(sourceApiAssociationConfig))

    /**
     * @param sourceApiIdentifier The identifier of the AppSync Source API.
     * This is generated by the AppSync service. In most cases, source APIs (especially in your
     * account) only require the API ID value or ARN of the source API. However, source APIs from other
     * accounts (cross-account use cases) strictly require the full resource ARN of the source API.
     */
    override fun sourceApiIdentifier(sourceApiIdentifier: String) {
      cdkBuilder.sourceApiIdentifier(sourceApiIdentifier)
    }

    public fun build(): software.amazon.awscdk.services.appsync.CfnSourceApiAssociationProps =
        cdkBuilder.build()
  }

  private class Wrapper(
    cdkObject: software.amazon.awscdk.services.appsync.CfnSourceApiAssociationProps,
  ) : CdkObject(cdkObject),
      CfnSourceApiAssociationProps {
    /**
     * The description field of the association configuration.
     *
     * [Documentation](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-sourceapiassociation.html#cfn-appsync-sourceapiassociation-description)
     */
    override fun description(): String? = unwrap(this).getDescription()

    /**
     * The identifier of the AppSync Merged API.
     *
     * This is generated by the AppSync service. In most cases, Merged APIs (especially in your
     * account) only require the API ID value or ARN of the merged API. However, Merged APIs from other
     * accounts (cross-account use cases) strictly require the full resource ARN of the merged API.
     *
     * [Documentation](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-sourceapiassociation.html#cfn-appsync-sourceapiassociation-mergedapiidentifier)
     */
    override fun mergedApiIdentifier(): String? = unwrap(this).getMergedApiIdentifier()

    /**
     * The `SourceApiAssociationConfig` object data.
     *
     * [Documentation](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-sourceapiassociation.html#cfn-appsync-sourceapiassociation-sourceapiassociationconfig)
     */
    override fun sourceApiAssociationConfig(): Any? = unwrap(this).getSourceApiAssociationConfig()

    /**
     * The identifier of the AppSync Source API.
     *
     * This is generated by the AppSync service. In most cases, source APIs (especially in your
     * account) only require the API ID value or ARN of the source API. However, source APIs from other
     * accounts (cross-account use cases) strictly require the full resource ARN of the source API.
     *
     * [Documentation](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-sourceapiassociation.html#cfn-appsync-sourceapiassociation-sourceapiidentifier)
     */
    override fun sourceApiIdentifier(): String? = unwrap(this).getSourceApiIdentifier()
  }

  public companion object {
    public operator fun invoke(block: Builder.() -> Unit = {}): CfnSourceApiAssociationProps {
      val builderImpl = BuilderImpl()
      return Wrapper(builderImpl.apply(block).build())
    }

    internal
        fun wrap(cdkObject: software.amazon.awscdk.services.appsync.CfnSourceApiAssociationProps):
        CfnSourceApiAssociationProps = CdkObjectWrappers.wrap(cdkObject) as?
        CfnSourceApiAssociationProps ?: Wrapper(cdkObject)

    internal fun unwrap(wrapped: CfnSourceApiAssociationProps):
        software.amazon.awscdk.services.appsync.CfnSourceApiAssociationProps = (wrapped as
        CdkObject).cdkObject as software.amazon.awscdk.services.appsync.CfnSourceApiAssociationProps
  }
}
