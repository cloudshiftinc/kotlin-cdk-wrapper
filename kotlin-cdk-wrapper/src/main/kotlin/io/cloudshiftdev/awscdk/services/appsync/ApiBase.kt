@file:Suppress("RedundantVisibilityModifier","RedundantUnitReturnType","RemoveRedundantQualifierName","unused","UnusedImport","ClassName","REDUNDANT_PROJECTION","DEPRECATION")

package io.cloudshiftdev.awscdk.services.appsync

import io.cloudshiftdev.awscdk.Resource
import io.cloudshiftdev.awscdk.common.CdkObject
import io.cloudshiftdev.awscdk.common.CdkObjectWrappers
import kotlin.String

/**
 * Base Class for API.
 */
public abstract class ApiBase(
  cdkObject: software.amazon.awscdk.services.appsync.ApiBase,
) : Resource(cdkObject),
    IApi {
  /**
   * The ARN of the AWS AppSync Api.
   */
  public override fun apiArn(): String = unwrap(this).getApiArn()

  /**
   * The unique identifier for the AWS AppSync Api generated by the service.
   */
  public override fun apiId(): String = unwrap(this).getApiId()

  private class Wrapper(
    cdkObject: software.amazon.awscdk.services.appsync.ApiBase,
  ) : ApiBase(cdkObject)

  public companion object {
    internal fun wrap(cdkObject: software.amazon.awscdk.services.appsync.ApiBase): ApiBase =
        CdkObjectWrappers.wrap(cdkObject) as? ApiBase ?: Wrapper(cdkObject)

    internal fun unwrap(wrapped: ApiBase): software.amazon.awscdk.services.appsync.ApiBase =
        (wrapped as CdkObject).cdkObject as software.amazon.awscdk.services.appsync.ApiBase
  }
}
