@file:Suppress("RedundantVisibilityModifier","RedundantUnitReturnType","RemoveRedundantQualifierName","unused","UnusedImport","ClassName","REDUNDANT_PROJECTION","DEPRECATION")

package io.cloudshiftdev.awscdk.services.guardduty

import io.cloudshiftdev.awscdk.IResolvable
import io.cloudshiftdev.awscdk.common.CdkDslMarker
import io.cloudshiftdev.awscdk.common.CdkObject
import io.cloudshiftdev.awscdk.common.CdkObjectWrappers
import kotlin.Any
import kotlin.String
import kotlin.Unit
import kotlin.collections.List
import kotlin.jvm.JvmName

/**
 * Properties for defining a `CfnMalwareProtectionPlan`.
 *
 * Example:
 *
 * ```
 * // The code below shows an example of how to instantiate this type.
 * // The values are placeholders you should change.
 * import io.cloudshiftdev.awscdk.services.guardduty.*;
 * CfnMalwareProtectionPlanProps cfnMalwareProtectionPlanProps =
 * CfnMalwareProtectionPlanProps.builder()
 * .protectedResource(CFNProtectedResourceProperty.builder()
 * .s3Bucket(S3BucketProperty.builder()
 * .bucketName("bucketName")
 * .objectPrefixes(List.of("objectPrefixes"))
 * .build())
 * .build())
 * .role("role")
 * // the properties below are optional
 * .actions(CFNActionsProperty.builder()
 * .tagging(CFNTaggingProperty.builder()
 * .status("status")
 * .build())
 * .build())
 * .tags(List.of(TagItemProperty.builder()
 * .key("key")
 * .value("value")
 * .build()))
 * .build();
 * ```
 *
 * [Documentation](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-guardduty-malwareprotectionplan.html)
 */
public interface CfnMalwareProtectionPlanProps {
  /**
   * Specifies the action that is to be applied to the Malware Protection plan resource.
   *
   * [Documentation](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-guardduty-malwareprotectionplan.html#cfn-guardduty-malwareprotectionplan-actions)
   */
  public fun actions(): Any? = unwrap(this).getActions()

  /**
   * Information about the protected resource.
   *
   * Presently, `S3Bucket` is the only supported protected resource.
   *
   * [Documentation](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-guardduty-malwareprotectionplan.html#cfn-guardduty-malwareprotectionplan-protectedresource)
   */
  public fun protectedResource(): Any

  /**
   * Amazon Resource Name (ARN) of the IAM role that includes the permissions required to scan and
   * (optionally) add tags to the associated protected resource.
   *
   * To find the ARN of your IAM role, go to the IAM console, and select the role name for details.
   *
   * [Documentation](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-guardduty-malwareprotectionplan.html#cfn-guardduty-malwareprotectionplan-role)
   */
  public fun role(): String

  /**
   * The tags to be added to the created Malware Protection plan resource.
   *
   * Each tag consists of a key and an optional value, both of which you need to specify.
   *
   * [Documentation](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-guardduty-malwareprotectionplan.html#cfn-guardduty-malwareprotectionplan-tags)
   */
  public fun tags(): List<CfnMalwareProtectionPlan.TagItemProperty> =
      unwrap(this).getTags()?.map(CfnMalwareProtectionPlan.TagItemProperty::wrap) ?: emptyList()

  /**
   * A builder for [CfnMalwareProtectionPlanProps]
   */
  @CdkDslMarker
  public interface Builder {
    /**
     * @param actions Specifies the action that is to be applied to the Malware Protection plan
     * resource.
     */
    public fun actions(actions: IResolvable)

    /**
     * @param actions Specifies the action that is to be applied to the Malware Protection plan
     * resource.
     */
    public fun actions(actions: CfnMalwareProtectionPlan.CFNActionsProperty)

    /**
     * @param actions Specifies the action that is to be applied to the Malware Protection plan
     * resource.
     */
    @kotlin.Suppress("INAPPLICABLE_JVM_NAME")
    @JvmName("4b4f249b62a084616424a862579ab986215f5ca74bf22a473418ada4e51046f6")
    public fun actions(actions: CfnMalwareProtectionPlan.CFNActionsProperty.Builder.() -> Unit)

    /**
     * @param protectedResource Information about the protected resource. 
     * Presently, `S3Bucket` is the only supported protected resource.
     */
    public fun protectedResource(protectedResource: IResolvable)

    /**
     * @param protectedResource Information about the protected resource. 
     * Presently, `S3Bucket` is the only supported protected resource.
     */
    public
        fun protectedResource(protectedResource: CfnMalwareProtectionPlan.CFNProtectedResourceProperty)

    /**
     * @param protectedResource Information about the protected resource. 
     * Presently, `S3Bucket` is the only supported protected resource.
     */
    @kotlin.Suppress("INAPPLICABLE_JVM_NAME")
    @JvmName("77ebef5c842efb59863ba666c537aab8a75c4e121440d975962f136cc283b086")
    public
        fun protectedResource(protectedResource: CfnMalwareProtectionPlan.CFNProtectedResourceProperty.Builder.() -> Unit)

    /**
     * @param role Amazon Resource Name (ARN) of the IAM role that includes the permissions required
     * to scan and (optionally) add tags to the associated protected resource. 
     * To find the ARN of your IAM role, go to the IAM console, and select the role name for
     * details.
     */
    public fun role(role: String)

    /**
     * @param tags The tags to be added to the created Malware Protection plan resource.
     * Each tag consists of a key and an optional value, both of which you need to specify.
     */
    public fun tags(tags: List<CfnMalwareProtectionPlan.TagItemProperty>)

    /**
     * @param tags The tags to be added to the created Malware Protection plan resource.
     * Each tag consists of a key and an optional value, both of which you need to specify.
     */
    public fun tags(vararg tags: CfnMalwareProtectionPlan.TagItemProperty)
  }

  private class BuilderImpl : Builder {
    private val cdkBuilder:
        software.amazon.awscdk.services.guardduty.CfnMalwareProtectionPlanProps.Builder =
        software.amazon.awscdk.services.guardduty.CfnMalwareProtectionPlanProps.builder()

    /**
     * @param actions Specifies the action that is to be applied to the Malware Protection plan
     * resource.
     */
    override fun actions(actions: IResolvable) {
      cdkBuilder.actions(actions.let(IResolvable.Companion::unwrap))
    }

    /**
     * @param actions Specifies the action that is to be applied to the Malware Protection plan
     * resource.
     */
    override fun actions(actions: CfnMalwareProtectionPlan.CFNActionsProperty) {
      cdkBuilder.actions(actions.let(CfnMalwareProtectionPlan.CFNActionsProperty.Companion::unwrap))
    }

    /**
     * @param actions Specifies the action that is to be applied to the Malware Protection plan
     * resource.
     */
    @kotlin.Suppress("INAPPLICABLE_JVM_NAME")
    @JvmName("4b4f249b62a084616424a862579ab986215f5ca74bf22a473418ada4e51046f6")
    override fun actions(actions: CfnMalwareProtectionPlan.CFNActionsProperty.Builder.() -> Unit):
        Unit = actions(CfnMalwareProtectionPlan.CFNActionsProperty(actions))

    /**
     * @param protectedResource Information about the protected resource. 
     * Presently, `S3Bucket` is the only supported protected resource.
     */
    override fun protectedResource(protectedResource: IResolvable) {
      cdkBuilder.protectedResource(protectedResource.let(IResolvable.Companion::unwrap))
    }

    /**
     * @param protectedResource Information about the protected resource. 
     * Presently, `S3Bucket` is the only supported protected resource.
     */
    override
        fun protectedResource(protectedResource: CfnMalwareProtectionPlan.CFNProtectedResourceProperty) {
      cdkBuilder.protectedResource(protectedResource.let(CfnMalwareProtectionPlan.CFNProtectedResourceProperty.Companion::unwrap))
    }

    /**
     * @param protectedResource Information about the protected resource. 
     * Presently, `S3Bucket` is the only supported protected resource.
     */
    @kotlin.Suppress("INAPPLICABLE_JVM_NAME")
    @JvmName("77ebef5c842efb59863ba666c537aab8a75c4e121440d975962f136cc283b086")
    override
        fun protectedResource(protectedResource: CfnMalwareProtectionPlan.CFNProtectedResourceProperty.Builder.() -> Unit):
        Unit =
        protectedResource(CfnMalwareProtectionPlan.CFNProtectedResourceProperty(protectedResource))

    /**
     * @param role Amazon Resource Name (ARN) of the IAM role that includes the permissions required
     * to scan and (optionally) add tags to the associated protected resource. 
     * To find the ARN of your IAM role, go to the IAM console, and select the role name for
     * details.
     */
    override fun role(role: String) {
      cdkBuilder.role(role)
    }

    /**
     * @param tags The tags to be added to the created Malware Protection plan resource.
     * Each tag consists of a key and an optional value, both of which you need to specify.
     */
    override fun tags(tags: List<CfnMalwareProtectionPlan.TagItemProperty>) {
      cdkBuilder.tags(tags.map(CfnMalwareProtectionPlan.TagItemProperty.Companion::unwrap))
    }

    /**
     * @param tags The tags to be added to the created Malware Protection plan resource.
     * Each tag consists of a key and an optional value, both of which you need to specify.
     */
    override fun tags(vararg tags: CfnMalwareProtectionPlan.TagItemProperty): Unit =
        tags(tags.toList())

    public fun build(): software.amazon.awscdk.services.guardduty.CfnMalwareProtectionPlanProps =
        cdkBuilder.build()
  }

  private class Wrapper(
    cdkObject: software.amazon.awscdk.services.guardduty.CfnMalwareProtectionPlanProps,
  ) : CdkObject(cdkObject),
      CfnMalwareProtectionPlanProps {
    /**
     * Specifies the action that is to be applied to the Malware Protection plan resource.
     *
     * [Documentation](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-guardduty-malwareprotectionplan.html#cfn-guardduty-malwareprotectionplan-actions)
     */
    override fun actions(): Any? = unwrap(this).getActions()

    /**
     * Information about the protected resource.
     *
     * Presently, `S3Bucket` is the only supported protected resource.
     *
     * [Documentation](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-guardduty-malwareprotectionplan.html#cfn-guardduty-malwareprotectionplan-protectedresource)
     */
    override fun protectedResource(): Any = unwrap(this).getProtectedResource()

    /**
     * Amazon Resource Name (ARN) of the IAM role that includes the permissions required to scan and
     * (optionally) add tags to the associated protected resource.
     *
     * To find the ARN of your IAM role, go to the IAM console, and select the role name for
     * details.
     *
     * [Documentation](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-guardduty-malwareprotectionplan.html#cfn-guardduty-malwareprotectionplan-role)
     */
    override fun role(): String = unwrap(this).getRole()

    /**
     * The tags to be added to the created Malware Protection plan resource.
     *
     * Each tag consists of a key and an optional value, both of which you need to specify.
     *
     * [Documentation](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-guardduty-malwareprotectionplan.html#cfn-guardduty-malwareprotectionplan-tags)
     */
    override fun tags(): List<CfnMalwareProtectionPlan.TagItemProperty> =
        unwrap(this).getTags()?.map(CfnMalwareProtectionPlan.TagItemProperty::wrap) ?: emptyList()
  }

  public companion object {
    public operator fun invoke(block: Builder.() -> Unit = {}): CfnMalwareProtectionPlanProps {
      val builderImpl = BuilderImpl()
      return Wrapper(builderImpl.apply(block).build())
    }

    internal
        fun wrap(cdkObject: software.amazon.awscdk.services.guardduty.CfnMalwareProtectionPlanProps):
        CfnMalwareProtectionPlanProps = CdkObjectWrappers.wrap(cdkObject) as?
        CfnMalwareProtectionPlanProps ?: Wrapper(cdkObject)

    internal fun unwrap(wrapped: CfnMalwareProtectionPlanProps):
        software.amazon.awscdk.services.guardduty.CfnMalwareProtectionPlanProps = (wrapped as
        CdkObject).cdkObject as
        software.amazon.awscdk.services.guardduty.CfnMalwareProtectionPlanProps
  }
}
