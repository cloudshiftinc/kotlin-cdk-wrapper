@file:Suppress("RedundantVisibilityModifier","RedundantUnitReturnType","RemoveRedundantQualifierName","unused","UnusedImport","ClassName","REDUNDANT_PROJECTION","DEPRECATION")

package io.cloudshiftdev.awscdk.services.datasync

import io.cloudshiftdev.awscdk.CfnResource
import io.cloudshiftdev.awscdk.CfnTag
import io.cloudshiftdev.awscdk.IInspectable
import io.cloudshiftdev.awscdk.IResolvable
import io.cloudshiftdev.awscdk.ITaggable
import io.cloudshiftdev.awscdk.TagManager
import io.cloudshiftdev.awscdk.TreeInspector
import io.cloudshiftdev.awscdk.common.CdkDslMarker
import io.cloudshiftdev.awscdk.common.CdkObject
import io.cloudshiftdev.awscdk.common.CdkObjectWrappers
import kotlin.Any
import kotlin.Number
import kotlin.String
import kotlin.Unit
import kotlin.collections.List
import kotlin.jvm.JvmName
import io.cloudshiftdev.constructs.Construct as CloudshiftdevConstructsConstruct
import software.constructs.Construct as SoftwareConstructsConstruct

/**
 * The `AWS::DataSync::LocationObjectStorage` resource specifies an endpoint for a self-managed
 * object storage bucket.
 *
 * For more information about self-managed object storage locations, see [Creating a Location for
 * Object Storage](https://docs.aws.amazon.com/datasync/latest/userguide/create-object-location.html) .
 *
 * Example:
 *
 * ```
 * // The code below shows an example of how to instantiate this type.
 * // The values are placeholders you should change.
 * import io.cloudshiftdev.awscdk.services.datasync.*;
 * CfnLocationObjectStorage cfnLocationObjectStorage = CfnLocationObjectStorage.Builder.create(this,
 * "MyCfnLocationObjectStorage")
 * .accessKey("accessKey")
 * .agentArns(List.of("agentArns"))
 * .bucketName("bucketName")
 * .cmkSecretConfig(CmkSecretConfigProperty.builder()
 * .kmsKeyArn("kmsKeyArn")
 * .secretArn("secretArn")
 * .build())
 * .customSecretConfig(CustomSecretConfigProperty.builder()
 * .secretAccessRoleArn("secretAccessRoleArn")
 * .secretArn("secretArn")
 * .build())
 * .secretKey("secretKey")
 * .serverCertificate("serverCertificate")
 * .serverHostname("serverHostname")
 * .serverPort(123)
 * .serverProtocol("serverProtocol")
 * .subdirectory("subdirectory")
 * .tags(List.of(CfnTag.builder()
 * .key("key")
 * .value("value")
 * .build()))
 * .build();
 * ```
 *
 * [Documentation](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datasync-locationobjectstorage.html)
 */
public open class CfnLocationObjectStorage(
  cdkObject: software.amazon.awscdk.services.datasync.CfnLocationObjectStorage,
) : CfnResource(cdkObject),
    IInspectable,
    ITaggable {
  public constructor(scope: CloudshiftdevConstructsConstruct, id: String) :
      this(software.amazon.awscdk.services.datasync.CfnLocationObjectStorage(scope.let(CloudshiftdevConstructsConstruct.Companion::unwrap),
      id)
  )

  public constructor(
    scope: CloudshiftdevConstructsConstruct,
    id: String,
    props: CfnLocationObjectStorageProps,
  ) :
      this(software.amazon.awscdk.services.datasync.CfnLocationObjectStorage(scope.let(CloudshiftdevConstructsConstruct.Companion::unwrap),
      id, props.let(CfnLocationObjectStorageProps.Companion::unwrap))
  )

  public constructor(
    scope: CloudshiftdevConstructsConstruct,
    id: String,
    props: CfnLocationObjectStorageProps.Builder.() -> Unit,
  ) : this(scope, id, CfnLocationObjectStorageProps(props)
  )

  /**
   * Specifies the access key (for example, a user name) if credentials are required to authenticate
   * with the object storage server.
   */
  public open fun accessKey(): String? = unwrap(this).getAccessKey()

  /**
   * Specifies the access key (for example, a user name) if credentials are required to authenticate
   * with the object storage server.
   */
  public open fun accessKey(`value`: String) {
    unwrap(this).setAccessKey(`value`)
  }

  /**
   * (Optional) Specifies the Amazon Resource Names (ARNs) of the DataSync agents that can connect
   * with your object storage system.
   */
  public open fun agentArns(): List<String> = unwrap(this).getAgentArns() ?: emptyList()

  /**
   * (Optional) Specifies the Amazon Resource Names (ARNs) of the DataSync agents that can connect
   * with your object storage system.
   */
  public open fun agentArns(`value`: List<String>) {
    unwrap(this).setAgentArns(`value`)
  }

  /**
   * (Optional) Specifies the Amazon Resource Names (ARNs) of the DataSync agents that can connect
   * with your object storage system.
   */
  public open fun agentArns(vararg `value`: String): Unit = agentArns(`value`.toList())

  /**
   * Specifies the ARN for the DataSync-managed AWS Secrets Manager secret that that is used to
   * access a specific storage location.
   *
   * This property is generated by DataSync and is read-only. DataSync encrypts this secret with the
   * KMS key that you specify for `KmsKeyArn` .
   */
  public open fun attrCmkSecretConfigSecretArn(): String =
      unwrap(this).getAttrCmkSecretConfigSecretArn()

  /**
   * The Amazon Resource Name (ARN) of the specified object storage location.
   */
  public open fun attrLocationArn(): String = unwrap(this).getAttrLocationArn()

  /**
   * The URI of the specified object storage location.
   */
  public open fun attrLocationUri(): String = unwrap(this).getAttrLocationUri()

  /**
   * Specifies configuration information for a DataSync-managed secret, such as an authentication
   * token or set of credentials that DataSync uses to access a specific transfer location.
   *
   * DataSync uses the default AWS-managed KMS key to encrypt this secret in AWS Secrets Manager.
   */
  public open fun attrManagedSecretConfig(): IResolvable =
      unwrap(this).getAttrManagedSecretConfig().let(IResolvable::wrap)

  /**
   * Specifies the name of the object storage bucket involved in the transfer.
   */
  public open fun bucketName(): String? = unwrap(this).getBucketName()

  /**
   * Specifies the name of the object storage bucket involved in the transfer.
   */
  public open fun bucketName(`value`: String) {
    unwrap(this).setBucketName(`value`)
  }

  /**
   * Specifies configuration information for a DataSync-managed secret, which includes the
   * `SecretKey` that DataSync uses to access a specific object storage location, with a
   * customer-managed AWS KMS key .
   */
  public open fun cmkSecretConfig(): Any? = unwrap(this).getCmkSecretConfig()

  /**
   * Specifies configuration information for a DataSync-managed secret, which includes the
   * `SecretKey` that DataSync uses to access a specific object storage location, with a
   * customer-managed AWS KMS key .
   */
  public open fun cmkSecretConfig(`value`: IResolvable) {
    unwrap(this).setCmkSecretConfig(`value`.let(IResolvable.Companion::unwrap))
  }

  /**
   * Specifies configuration information for a DataSync-managed secret, which includes the
   * `SecretKey` that DataSync uses to access a specific object storage location, with a
   * customer-managed AWS KMS key .
   */
  public open fun cmkSecretConfig(`value`: CmkSecretConfigProperty) {
    unwrap(this).setCmkSecretConfig(`value`.let(CmkSecretConfigProperty.Companion::unwrap))
  }

  /**
   * Specifies configuration information for a DataSync-managed secret, which includes the
   * `SecretKey` that DataSync uses to access a specific object storage location, with a
   * customer-managed AWS KMS key .
   */
  @kotlin.Suppress("INAPPLICABLE_JVM_NAME")
  @JvmName("3dfa10d00f5edd3cadac15b77132506290ae53f19185688765c761b4bc1f49c7")
  public open fun cmkSecretConfig(`value`: CmkSecretConfigProperty.Builder.() -> Unit): Unit =
      cmkSecretConfig(CmkSecretConfigProperty(`value`))

  /**
   * Specifies configuration information for a customer-managed Secrets Manager secret where the
   * secret key for a specific object storage location is stored in plain text.
   */
  public open fun customSecretConfig(): Any? = unwrap(this).getCustomSecretConfig()

  /**
   * Specifies configuration information for a customer-managed Secrets Manager secret where the
   * secret key for a specific object storage location is stored in plain text.
   */
  public open fun customSecretConfig(`value`: IResolvable) {
    unwrap(this).setCustomSecretConfig(`value`.let(IResolvable.Companion::unwrap))
  }

  /**
   * Specifies configuration information for a customer-managed Secrets Manager secret where the
   * secret key for a specific object storage location is stored in plain text.
   */
  public open fun customSecretConfig(`value`: CustomSecretConfigProperty) {
    unwrap(this).setCustomSecretConfig(`value`.let(CustomSecretConfigProperty.Companion::unwrap))
  }

  /**
   * Specifies configuration information for a customer-managed Secrets Manager secret where the
   * secret key for a specific object storage location is stored in plain text.
   */
  @kotlin.Suppress("INAPPLICABLE_JVM_NAME")
  @JvmName("5a77b00e6314c8ca646604f5db44182b2f3d9b42559d3e47214ef2f7e24bd847")
  public open fun customSecretConfig(`value`: CustomSecretConfigProperty.Builder.() -> Unit): Unit =
      customSecretConfig(CustomSecretConfigProperty(`value`))

  /**
   * Examines the CloudFormation resource and discloses attributes.
   *
   * @param inspector tree inspector to collect and process attributes. 
   */
  public override fun inspect(inspector: TreeInspector) {
    unwrap(this).inspect(inspector.let(TreeInspector.Companion::unwrap))
  }

  /**
   * Specifies the secret key (for example, a password) if credentials are required to authenticate
   * with the object storage server.
   */
  public open fun secretKey(): String? = unwrap(this).getSecretKey()

  /**
   * Specifies the secret key (for example, a password) if credentials are required to authenticate
   * with the object storage server.
   */
  public open fun secretKey(`value`: String) {
    unwrap(this).setSecretKey(`value`)
  }

  /**
   * Specifies a certificate chain for DataSync to authenticate with your object storage system if
   * the system uses a private or self-signed certificate authority (CA).
   */
  public open fun serverCertificate(): String? = unwrap(this).getServerCertificate()

  /**
   * Specifies a certificate chain for DataSync to authenticate with your object storage system if
   * the system uses a private or self-signed certificate authority (CA).
   */
  public open fun serverCertificate(`value`: String) {
    unwrap(this).setServerCertificate(`value`)
  }

  /**
   * Specifies the domain name or IP address (IPv4 or IPv6) of the object storage server that your
   * DataSync agent connects to.
   */
  public open fun serverHostname(): String? = unwrap(this).getServerHostname()

  /**
   * Specifies the domain name or IP address (IPv4 or IPv6) of the object storage server that your
   * DataSync agent connects to.
   */
  public open fun serverHostname(`value`: String) {
    unwrap(this).setServerHostname(`value`)
  }

  /**
   * Specifies the port that your object storage server accepts inbound network traffic on (for
   * example, port 443).
   */
  public open fun serverPort(): Number? = unwrap(this).getServerPort()

  /**
   * Specifies the port that your object storage server accepts inbound network traffic on (for
   * example, port 443).
   */
  public open fun serverPort(`value`: Number) {
    unwrap(this).setServerPort(`value`)
  }

  /**
   * Specifies the protocol that your object storage server uses to communicate.
   */
  public open fun serverProtocol(): String? = unwrap(this).getServerProtocol()

  /**
   * Specifies the protocol that your object storage server uses to communicate.
   */
  public open fun serverProtocol(`value`: String) {
    unwrap(this).setServerProtocol(`value`)
  }

  /**
   * Specifies the object prefix for your object storage server.
   */
  public open fun subdirectory(): String? = unwrap(this).getSubdirectory()

  /**
   * Specifies the object prefix for your object storage server.
   */
  public open fun subdirectory(`value`: String) {
    unwrap(this).setSubdirectory(`value`)
  }

  /**
   * Tag Manager which manages the tags for this resource.
   */
  public override fun tags(): TagManager = unwrap(this).getTags().let(TagManager::wrap)

  /**
   * Specifies the key-value pair that represents a tag that you want to add to the resource.
   */
  public open fun tagsRaw(): List<CfnTag> = unwrap(this).getTagsRaw()?.map(CfnTag::wrap) ?:
      emptyList()

  /**
   * Specifies the key-value pair that represents a tag that you want to add to the resource.
   */
  public open fun tagsRaw(`value`: List<CfnTag>) {
    unwrap(this).setTagsRaw(`value`.map(CfnTag.Companion::unwrap))
  }

  /**
   * Specifies the key-value pair that represents a tag that you want to add to the resource.
   */
  public open fun tagsRaw(vararg `value`: CfnTag): Unit = tagsRaw(`value`.toList())

  /**
   * A fluent builder for [io.cloudshiftdev.awscdk.services.datasync.CfnLocationObjectStorage].
   */
  @CdkDslMarker
  public interface Builder {
    /**
     * Specifies the access key (for example, a user name) if credentials are required to
     * authenticate with the object storage server.
     *
     * [Documentation](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datasync-locationobjectstorage.html#cfn-datasync-locationobjectstorage-accesskey)
     * @param accessKey Specifies the access key (for example, a user name) if credentials are
     * required to authenticate with the object storage server. 
     */
    public fun accessKey(accessKey: String)

    /**
     * (Optional) Specifies the Amazon Resource Names (ARNs) of the DataSync agents that can connect
     * with your object storage system.
     *
     * If you are setting up an agentless cross-cloud transfer, you do not need to specify a value
     * for this parameter.
     *
     *
     * Make sure you configure this parameter correctly when you first create your storage location.
     * You cannot add or remove agents from a storage location after you create it.
     *
     *
     * [Documentation](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datasync-locationobjectstorage.html#cfn-datasync-locationobjectstorage-agentarns)
     * @param agentArns (Optional) Specifies the Amazon Resource Names (ARNs) of the DataSync agents
     * that can connect with your object storage system. 
     */
    public fun agentArns(agentArns: List<String>)

    /**
     * (Optional) Specifies the Amazon Resource Names (ARNs) of the DataSync agents that can connect
     * with your object storage system.
     *
     * If you are setting up an agentless cross-cloud transfer, you do not need to specify a value
     * for this parameter.
     *
     *
     * Make sure you configure this parameter correctly when you first create your storage location.
     * You cannot add or remove agents from a storage location after you create it.
     *
     *
     * [Documentation](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datasync-locationobjectstorage.html#cfn-datasync-locationobjectstorage-agentarns)
     * @param agentArns (Optional) Specifies the Amazon Resource Names (ARNs) of the DataSync agents
     * that can connect with your object storage system. 
     */
    public fun agentArns(vararg agentArns: String)

    /**
     * Specifies the name of the object storage bucket involved in the transfer.
     *
     * [Documentation](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datasync-locationobjectstorage.html#cfn-datasync-locationobjectstorage-bucketname)
     * @param bucketName Specifies the name of the object storage bucket involved in the transfer. 
     */
    public fun bucketName(bucketName: String)

    /**
     * Specifies configuration information for a DataSync-managed secret, which includes the
     * `SecretKey` that DataSync uses to access a specific object storage location, with a
     * customer-managed AWS KMS key .
     *
     * When you include this paramater as part of a `CreateLocationObjectStorage` request, you
     * provide only the KMS key ARN. DataSync uses this KMS key together with the value you specify for
     * the `SecretKey` parameter to create a DataSync-managed secret to store the location access
     * credentials.
     *
     * Make sure the DataSync has permission to access the KMS key that you specify.
     *
     *
     * You can use either `CmkSecretConfig` (with `SecretKey` ) or `CustomSecretConfig` (without
     * `SecretKey` ) to provide credentials for a `CreateLocationObjectStorage` request. Do not provide
     * both parameters for the same request.
     *
     *
     * [Documentation](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datasync-locationobjectstorage.html#cfn-datasync-locationobjectstorage-cmksecretconfig)
     * @param cmkSecretConfig Specifies configuration information for a DataSync-managed secret,
     * which includes the `SecretKey` that DataSync uses to access a specific object storage location,
     * with a customer-managed AWS KMS key . 
     */
    public fun cmkSecretConfig(cmkSecretConfig: IResolvable)

    /**
     * Specifies configuration information for a DataSync-managed secret, which includes the
     * `SecretKey` that DataSync uses to access a specific object storage location, with a
     * customer-managed AWS KMS key .
     *
     * When you include this paramater as part of a `CreateLocationObjectStorage` request, you
     * provide only the KMS key ARN. DataSync uses this KMS key together with the value you specify for
     * the `SecretKey` parameter to create a DataSync-managed secret to store the location access
     * credentials.
     *
     * Make sure the DataSync has permission to access the KMS key that you specify.
     *
     *
     * You can use either `CmkSecretConfig` (with `SecretKey` ) or `CustomSecretConfig` (without
     * `SecretKey` ) to provide credentials for a `CreateLocationObjectStorage` request. Do not provide
     * both parameters for the same request.
     *
     *
     * [Documentation](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datasync-locationobjectstorage.html#cfn-datasync-locationobjectstorage-cmksecretconfig)
     * @param cmkSecretConfig Specifies configuration information for a DataSync-managed secret,
     * which includes the `SecretKey` that DataSync uses to access a specific object storage location,
     * with a customer-managed AWS KMS key . 
     */
    public fun cmkSecretConfig(cmkSecretConfig: CmkSecretConfigProperty)

    /**
     * Specifies configuration information for a DataSync-managed secret, which includes the
     * `SecretKey` that DataSync uses to access a specific object storage location, with a
     * customer-managed AWS KMS key .
     *
     * When you include this paramater as part of a `CreateLocationObjectStorage` request, you
     * provide only the KMS key ARN. DataSync uses this KMS key together with the value you specify for
     * the `SecretKey` parameter to create a DataSync-managed secret to store the location access
     * credentials.
     *
     * Make sure the DataSync has permission to access the KMS key that you specify.
     *
     *
     * You can use either `CmkSecretConfig` (with `SecretKey` ) or `CustomSecretConfig` (without
     * `SecretKey` ) to provide credentials for a `CreateLocationObjectStorage` request. Do not provide
     * both parameters for the same request.
     *
     *
     * [Documentation](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datasync-locationobjectstorage.html#cfn-datasync-locationobjectstorage-cmksecretconfig)
     * @param cmkSecretConfig Specifies configuration information for a DataSync-managed secret,
     * which includes the `SecretKey` that DataSync uses to access a specific object storage location,
     * with a customer-managed AWS KMS key . 
     */
    @kotlin.Suppress("INAPPLICABLE_JVM_NAME")
    @JvmName("1b3f0ef17ff3d6873e7116530ca281109acfe74a45a1ddbaba1968d1ebcc3724")
    public fun cmkSecretConfig(cmkSecretConfig: CmkSecretConfigProperty.Builder.() -> Unit)

    /**
     * Specifies configuration information for a customer-managed Secrets Manager secret where the
     * secret key for a specific object storage location is stored in plain text.
     *
     * This configuration includes the secret ARN, and the ARN for an IAM role that provides access
     * to the secret.
     *
     *
     * You can use either `CmkSecretConfig` (with `SecretKey` ) or `CustomSecretConfig` (without
     * `SecretKey` ) to provide credentials for a `CreateLocationObjectStorage` request. Do not provide
     * both parameters for the same request.
     *
     *
     * [Documentation](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datasync-locationobjectstorage.html#cfn-datasync-locationobjectstorage-customsecretconfig)
     * @param customSecretConfig Specifies configuration information for a customer-managed Secrets
     * Manager secret where the secret key for a specific object storage location is stored in plain
     * text. 
     */
    public fun customSecretConfig(customSecretConfig: IResolvable)

    /**
     * Specifies configuration information for a customer-managed Secrets Manager secret where the
     * secret key for a specific object storage location is stored in plain text.
     *
     * This configuration includes the secret ARN, and the ARN for an IAM role that provides access
     * to the secret.
     *
     *
     * You can use either `CmkSecretConfig` (with `SecretKey` ) or `CustomSecretConfig` (without
     * `SecretKey` ) to provide credentials for a `CreateLocationObjectStorage` request. Do not provide
     * both parameters for the same request.
     *
     *
     * [Documentation](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datasync-locationobjectstorage.html#cfn-datasync-locationobjectstorage-customsecretconfig)
     * @param customSecretConfig Specifies configuration information for a customer-managed Secrets
     * Manager secret where the secret key for a specific object storage location is stored in plain
     * text. 
     */
    public fun customSecretConfig(customSecretConfig: CustomSecretConfigProperty)

    /**
     * Specifies configuration information for a customer-managed Secrets Manager secret where the
     * secret key for a specific object storage location is stored in plain text.
     *
     * This configuration includes the secret ARN, and the ARN for an IAM role that provides access
     * to the secret.
     *
     *
     * You can use either `CmkSecretConfig` (with `SecretKey` ) or `CustomSecretConfig` (without
     * `SecretKey` ) to provide credentials for a `CreateLocationObjectStorage` request. Do not provide
     * both parameters for the same request.
     *
     *
     * [Documentation](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datasync-locationobjectstorage.html#cfn-datasync-locationobjectstorage-customsecretconfig)
     * @param customSecretConfig Specifies configuration information for a customer-managed Secrets
     * Manager secret where the secret key for a specific object storage location is stored in plain
     * text. 
     */
    @kotlin.Suppress("INAPPLICABLE_JVM_NAME")
    @JvmName("134b0a5b15540025175b472974fe91c93c87c8c7a247820c2920178def8ef53b")
    public fun customSecretConfig(customSecretConfig: CustomSecretConfigProperty.Builder.() -> Unit)

    /**
     * Specifies the secret key (for example, a password) if credentials are required to
     * authenticate with the object storage server.
     *
     *
     * If you provide a secret using `SecretKey` , but do not provide secret configuration details
     * using `CmkSecretConfig` or `CustomSecretConfig` , then DataSync stores the token using your AWS
     * account's Secrets Manager secret.
     *
     *
     * [Documentation](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datasync-locationobjectstorage.html#cfn-datasync-locationobjectstorage-secretkey)
     * @param secretKey Specifies the secret key (for example, a password) if credentials are
     * required to authenticate with the object storage server. 
     */
    public fun secretKey(secretKey: String)

    /**
     * Specifies a certificate chain for DataSync to authenticate with your object storage system if
     * the system uses a private or self-signed certificate authority (CA).
     *
     * You must specify a single `.pem` file with a full certificate chain (for example,
     * `file:///home/user/.ssh/object_storage_certificates.pem` ).
     *
     * The certificate chain might include:
     *
     * * The object storage system's certificate
     * * All intermediate certificates (if there are any)
     * * The root certificate of the signing CA
     *
     * You can concatenate your certificates into a `.pem` file (which can be up to 32768 bytes
     * before base64 encoding). The following example `cat` command creates an
     * `object_storage_certificates.pem` file that includes three certificates:
     *
     * `cat object_server_certificate.pem intermediate_certificate.pem ca_root_certificate.pem &gt;
     * object_storage_certificates.pem`
     *
     * To use this parameter, configure `ServerProtocol` to `HTTPS` .
     *
     * [Documentation](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datasync-locationobjectstorage.html#cfn-datasync-locationobjectstorage-servercertificate)
     * @param serverCertificate Specifies a certificate chain for DataSync to authenticate with your
     * object storage system if the system uses a private or self-signed certificate authority (CA). 
     */
    public fun serverCertificate(serverCertificate: String)

    /**
     * Specifies the domain name or IP address (IPv4 or IPv6) of the object storage server that your
     * DataSync agent connects to.
     *
     * [Documentation](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datasync-locationobjectstorage.html#cfn-datasync-locationobjectstorage-serverhostname)
     * @param serverHostname Specifies the domain name or IP address (IPv4 or IPv6) of the object
     * storage server that your DataSync agent connects to. 
     */
    public fun serverHostname(serverHostname: String)

    /**
     * Specifies the port that your object storage server accepts inbound network traffic on (for
     * example, port 443).
     *
     * [Documentation](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datasync-locationobjectstorage.html#cfn-datasync-locationobjectstorage-serverport)
     * @param serverPort Specifies the port that your object storage server accepts inbound network
     * traffic on (for example, port 443). 
     */
    public fun serverPort(serverPort: Number)

    /**
     * Specifies the protocol that your object storage server uses to communicate.
     *
     * If not specified, the default value is `HTTPS` .
     *
     * [Documentation](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datasync-locationobjectstorage.html#cfn-datasync-locationobjectstorage-serverprotocol)
     * @param serverProtocol Specifies the protocol that your object storage server uses to
     * communicate. 
     */
    public fun serverProtocol(serverProtocol: String)

    /**
     * Specifies the object prefix for your object storage server.
     *
     * If this is a source location, DataSync only copies objects with this prefix. If this is a
     * destination location, DataSync writes all objects with this prefix.
     *
     * [Documentation](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datasync-locationobjectstorage.html#cfn-datasync-locationobjectstorage-subdirectory)
     * @param subdirectory Specifies the object prefix for your object storage server. 
     */
    public fun subdirectory(subdirectory: String)

    /**
     * Specifies the key-value pair that represents a tag that you want to add to the resource.
     *
     * Tags can help you manage, filter, and search for your resources. We recommend creating a name
     * tag for your location.
     *
     * [Documentation](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datasync-locationobjectstorage.html#cfn-datasync-locationobjectstorage-tags)
     * @param tags Specifies the key-value pair that represents a tag that you want to add to the
     * resource. 
     */
    public fun tags(tags: List<CfnTag>)

    /**
     * Specifies the key-value pair that represents a tag that you want to add to the resource.
     *
     * Tags can help you manage, filter, and search for your resources. We recommend creating a name
     * tag for your location.
     *
     * [Documentation](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datasync-locationobjectstorage.html#cfn-datasync-locationobjectstorage-tags)
     * @param tags Specifies the key-value pair that represents a tag that you want to add to the
     * resource. 
     */
    public fun tags(vararg tags: CfnTag)
  }

  private class BuilderImpl(
    scope: SoftwareConstructsConstruct,
    id: String,
  ) : Builder {
    private val cdkBuilder:
        software.amazon.awscdk.services.datasync.CfnLocationObjectStorage.Builder =
        software.amazon.awscdk.services.datasync.CfnLocationObjectStorage.Builder.create(scope, id)

    /**
     * Specifies the access key (for example, a user name) if credentials are required to
     * authenticate with the object storage server.
     *
     * [Documentation](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datasync-locationobjectstorage.html#cfn-datasync-locationobjectstorage-accesskey)
     * @param accessKey Specifies the access key (for example, a user name) if credentials are
     * required to authenticate with the object storage server. 
     */
    override fun accessKey(accessKey: String) {
      cdkBuilder.accessKey(accessKey)
    }

    /**
     * (Optional) Specifies the Amazon Resource Names (ARNs) of the DataSync agents that can connect
     * with your object storage system.
     *
     * If you are setting up an agentless cross-cloud transfer, you do not need to specify a value
     * for this parameter.
     *
     *
     * Make sure you configure this parameter correctly when you first create your storage location.
     * You cannot add or remove agents from a storage location after you create it.
     *
     *
     * [Documentation](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datasync-locationobjectstorage.html#cfn-datasync-locationobjectstorage-agentarns)
     * @param agentArns (Optional) Specifies the Amazon Resource Names (ARNs) of the DataSync agents
     * that can connect with your object storage system. 
     */
    override fun agentArns(agentArns: List<String>) {
      cdkBuilder.agentArns(agentArns)
    }

    /**
     * (Optional) Specifies the Amazon Resource Names (ARNs) of the DataSync agents that can connect
     * with your object storage system.
     *
     * If you are setting up an agentless cross-cloud transfer, you do not need to specify a value
     * for this parameter.
     *
     *
     * Make sure you configure this parameter correctly when you first create your storage location.
     * You cannot add or remove agents from a storage location after you create it.
     *
     *
     * [Documentation](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datasync-locationobjectstorage.html#cfn-datasync-locationobjectstorage-agentarns)
     * @param agentArns (Optional) Specifies the Amazon Resource Names (ARNs) of the DataSync agents
     * that can connect with your object storage system. 
     */
    override fun agentArns(vararg agentArns: String): Unit = agentArns(agentArns.toList())

    /**
     * Specifies the name of the object storage bucket involved in the transfer.
     *
     * [Documentation](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datasync-locationobjectstorage.html#cfn-datasync-locationobjectstorage-bucketname)
     * @param bucketName Specifies the name of the object storage bucket involved in the transfer. 
     */
    override fun bucketName(bucketName: String) {
      cdkBuilder.bucketName(bucketName)
    }

    /**
     * Specifies configuration information for a DataSync-managed secret, which includes the
     * `SecretKey` that DataSync uses to access a specific object storage location, with a
     * customer-managed AWS KMS key .
     *
     * When you include this paramater as part of a `CreateLocationObjectStorage` request, you
     * provide only the KMS key ARN. DataSync uses this KMS key together with the value you specify for
     * the `SecretKey` parameter to create a DataSync-managed secret to store the location access
     * credentials.
     *
     * Make sure the DataSync has permission to access the KMS key that you specify.
     *
     *
     * You can use either `CmkSecretConfig` (with `SecretKey` ) or `CustomSecretConfig` (without
     * `SecretKey` ) to provide credentials for a `CreateLocationObjectStorage` request. Do not provide
     * both parameters for the same request.
     *
     *
     * [Documentation](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datasync-locationobjectstorage.html#cfn-datasync-locationobjectstorage-cmksecretconfig)
     * @param cmkSecretConfig Specifies configuration information for a DataSync-managed secret,
     * which includes the `SecretKey` that DataSync uses to access a specific object storage location,
     * with a customer-managed AWS KMS key . 
     */
    override fun cmkSecretConfig(cmkSecretConfig: IResolvable) {
      cdkBuilder.cmkSecretConfig(cmkSecretConfig.let(IResolvable.Companion::unwrap))
    }

    /**
     * Specifies configuration information for a DataSync-managed secret, which includes the
     * `SecretKey` that DataSync uses to access a specific object storage location, with a
     * customer-managed AWS KMS key .
     *
     * When you include this paramater as part of a `CreateLocationObjectStorage` request, you
     * provide only the KMS key ARN. DataSync uses this KMS key together with the value you specify for
     * the `SecretKey` parameter to create a DataSync-managed secret to store the location access
     * credentials.
     *
     * Make sure the DataSync has permission to access the KMS key that you specify.
     *
     *
     * You can use either `CmkSecretConfig` (with `SecretKey` ) or `CustomSecretConfig` (without
     * `SecretKey` ) to provide credentials for a `CreateLocationObjectStorage` request. Do not provide
     * both parameters for the same request.
     *
     *
     * [Documentation](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datasync-locationobjectstorage.html#cfn-datasync-locationobjectstorage-cmksecretconfig)
     * @param cmkSecretConfig Specifies configuration information for a DataSync-managed secret,
     * which includes the `SecretKey` that DataSync uses to access a specific object storage location,
     * with a customer-managed AWS KMS key . 
     */
    override fun cmkSecretConfig(cmkSecretConfig: CmkSecretConfigProperty) {
      cdkBuilder.cmkSecretConfig(cmkSecretConfig.let(CmkSecretConfigProperty.Companion::unwrap))
    }

    /**
     * Specifies configuration information for a DataSync-managed secret, which includes the
     * `SecretKey` that DataSync uses to access a specific object storage location, with a
     * customer-managed AWS KMS key .
     *
     * When you include this paramater as part of a `CreateLocationObjectStorage` request, you
     * provide only the KMS key ARN. DataSync uses this KMS key together with the value you specify for
     * the `SecretKey` parameter to create a DataSync-managed secret to store the location access
     * credentials.
     *
     * Make sure the DataSync has permission to access the KMS key that you specify.
     *
     *
     * You can use either `CmkSecretConfig` (with `SecretKey` ) or `CustomSecretConfig` (without
     * `SecretKey` ) to provide credentials for a `CreateLocationObjectStorage` request. Do not provide
     * both parameters for the same request.
     *
     *
     * [Documentation](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datasync-locationobjectstorage.html#cfn-datasync-locationobjectstorage-cmksecretconfig)
     * @param cmkSecretConfig Specifies configuration information for a DataSync-managed secret,
     * which includes the `SecretKey` that DataSync uses to access a specific object storage location,
     * with a customer-managed AWS KMS key . 
     */
    @kotlin.Suppress("INAPPLICABLE_JVM_NAME")
    @JvmName("1b3f0ef17ff3d6873e7116530ca281109acfe74a45a1ddbaba1968d1ebcc3724")
    override fun cmkSecretConfig(cmkSecretConfig: CmkSecretConfigProperty.Builder.() -> Unit): Unit
        = cmkSecretConfig(CmkSecretConfigProperty(cmkSecretConfig))

    /**
     * Specifies configuration information for a customer-managed Secrets Manager secret where the
     * secret key for a specific object storage location is stored in plain text.
     *
     * This configuration includes the secret ARN, and the ARN for an IAM role that provides access
     * to the secret.
     *
     *
     * You can use either `CmkSecretConfig` (with `SecretKey` ) or `CustomSecretConfig` (without
     * `SecretKey` ) to provide credentials for a `CreateLocationObjectStorage` request. Do not provide
     * both parameters for the same request.
     *
     *
     * [Documentation](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datasync-locationobjectstorage.html#cfn-datasync-locationobjectstorage-customsecretconfig)
     * @param customSecretConfig Specifies configuration information for a customer-managed Secrets
     * Manager secret where the secret key for a specific object storage location is stored in plain
     * text. 
     */
    override fun customSecretConfig(customSecretConfig: IResolvable) {
      cdkBuilder.customSecretConfig(customSecretConfig.let(IResolvable.Companion::unwrap))
    }

    /**
     * Specifies configuration information for a customer-managed Secrets Manager secret where the
     * secret key for a specific object storage location is stored in plain text.
     *
     * This configuration includes the secret ARN, and the ARN for an IAM role that provides access
     * to the secret.
     *
     *
     * You can use either `CmkSecretConfig` (with `SecretKey` ) or `CustomSecretConfig` (without
     * `SecretKey` ) to provide credentials for a `CreateLocationObjectStorage` request. Do not provide
     * both parameters for the same request.
     *
     *
     * [Documentation](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datasync-locationobjectstorage.html#cfn-datasync-locationobjectstorage-customsecretconfig)
     * @param customSecretConfig Specifies configuration information for a customer-managed Secrets
     * Manager secret where the secret key for a specific object storage location is stored in plain
     * text. 
     */
    override fun customSecretConfig(customSecretConfig: CustomSecretConfigProperty) {
      cdkBuilder.customSecretConfig(customSecretConfig.let(CustomSecretConfigProperty.Companion::unwrap))
    }

    /**
     * Specifies configuration information for a customer-managed Secrets Manager secret where the
     * secret key for a specific object storage location is stored in plain text.
     *
     * This configuration includes the secret ARN, and the ARN for an IAM role that provides access
     * to the secret.
     *
     *
     * You can use either `CmkSecretConfig` (with `SecretKey` ) or `CustomSecretConfig` (without
     * `SecretKey` ) to provide credentials for a `CreateLocationObjectStorage` request. Do not provide
     * both parameters for the same request.
     *
     *
     * [Documentation](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datasync-locationobjectstorage.html#cfn-datasync-locationobjectstorage-customsecretconfig)
     * @param customSecretConfig Specifies configuration information for a customer-managed Secrets
     * Manager secret where the secret key for a specific object storage location is stored in plain
     * text. 
     */
    @kotlin.Suppress("INAPPLICABLE_JVM_NAME")
    @JvmName("134b0a5b15540025175b472974fe91c93c87c8c7a247820c2920178def8ef53b")
    override
        fun customSecretConfig(customSecretConfig: CustomSecretConfigProperty.Builder.() -> Unit):
        Unit = customSecretConfig(CustomSecretConfigProperty(customSecretConfig))

    /**
     * Specifies the secret key (for example, a password) if credentials are required to
     * authenticate with the object storage server.
     *
     *
     * If you provide a secret using `SecretKey` , but do not provide secret configuration details
     * using `CmkSecretConfig` or `CustomSecretConfig` , then DataSync stores the token using your AWS
     * account's Secrets Manager secret.
     *
     *
     * [Documentation](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datasync-locationobjectstorage.html#cfn-datasync-locationobjectstorage-secretkey)
     * @param secretKey Specifies the secret key (for example, a password) if credentials are
     * required to authenticate with the object storage server. 
     */
    override fun secretKey(secretKey: String) {
      cdkBuilder.secretKey(secretKey)
    }

    /**
     * Specifies a certificate chain for DataSync to authenticate with your object storage system if
     * the system uses a private or self-signed certificate authority (CA).
     *
     * You must specify a single `.pem` file with a full certificate chain (for example,
     * `file:///home/user/.ssh/object_storage_certificates.pem` ).
     *
     * The certificate chain might include:
     *
     * * The object storage system's certificate
     * * All intermediate certificates (if there are any)
     * * The root certificate of the signing CA
     *
     * You can concatenate your certificates into a `.pem` file (which can be up to 32768 bytes
     * before base64 encoding). The following example `cat` command creates an
     * `object_storage_certificates.pem` file that includes three certificates:
     *
     * `cat object_server_certificate.pem intermediate_certificate.pem ca_root_certificate.pem &gt;
     * object_storage_certificates.pem`
     *
     * To use this parameter, configure `ServerProtocol` to `HTTPS` .
     *
     * [Documentation](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datasync-locationobjectstorage.html#cfn-datasync-locationobjectstorage-servercertificate)
     * @param serverCertificate Specifies a certificate chain for DataSync to authenticate with your
     * object storage system if the system uses a private or self-signed certificate authority (CA). 
     */
    override fun serverCertificate(serverCertificate: String) {
      cdkBuilder.serverCertificate(serverCertificate)
    }

    /**
     * Specifies the domain name or IP address (IPv4 or IPv6) of the object storage server that your
     * DataSync agent connects to.
     *
     * [Documentation](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datasync-locationobjectstorage.html#cfn-datasync-locationobjectstorage-serverhostname)
     * @param serverHostname Specifies the domain name or IP address (IPv4 or IPv6) of the object
     * storage server that your DataSync agent connects to. 
     */
    override fun serverHostname(serverHostname: String) {
      cdkBuilder.serverHostname(serverHostname)
    }

    /**
     * Specifies the port that your object storage server accepts inbound network traffic on (for
     * example, port 443).
     *
     * [Documentation](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datasync-locationobjectstorage.html#cfn-datasync-locationobjectstorage-serverport)
     * @param serverPort Specifies the port that your object storage server accepts inbound network
     * traffic on (for example, port 443). 
     */
    override fun serverPort(serverPort: Number) {
      cdkBuilder.serverPort(serverPort)
    }

    /**
     * Specifies the protocol that your object storage server uses to communicate.
     *
     * If not specified, the default value is `HTTPS` .
     *
     * [Documentation](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datasync-locationobjectstorage.html#cfn-datasync-locationobjectstorage-serverprotocol)
     * @param serverProtocol Specifies the protocol that your object storage server uses to
     * communicate. 
     */
    override fun serverProtocol(serverProtocol: String) {
      cdkBuilder.serverProtocol(serverProtocol)
    }

    /**
     * Specifies the object prefix for your object storage server.
     *
     * If this is a source location, DataSync only copies objects with this prefix. If this is a
     * destination location, DataSync writes all objects with this prefix.
     *
     * [Documentation](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datasync-locationobjectstorage.html#cfn-datasync-locationobjectstorage-subdirectory)
     * @param subdirectory Specifies the object prefix for your object storage server. 
     */
    override fun subdirectory(subdirectory: String) {
      cdkBuilder.subdirectory(subdirectory)
    }

    /**
     * Specifies the key-value pair that represents a tag that you want to add to the resource.
     *
     * Tags can help you manage, filter, and search for your resources. We recommend creating a name
     * tag for your location.
     *
     * [Documentation](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datasync-locationobjectstorage.html#cfn-datasync-locationobjectstorage-tags)
     * @param tags Specifies the key-value pair that represents a tag that you want to add to the
     * resource. 
     */
    override fun tags(tags: List<CfnTag>) {
      cdkBuilder.tags(tags.map(CfnTag.Companion::unwrap))
    }

    /**
     * Specifies the key-value pair that represents a tag that you want to add to the resource.
     *
     * Tags can help you manage, filter, and search for your resources. We recommend creating a name
     * tag for your location.
     *
     * [Documentation](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datasync-locationobjectstorage.html#cfn-datasync-locationobjectstorage-tags)
     * @param tags Specifies the key-value pair that represents a tag that you want to add to the
     * resource. 
     */
    override fun tags(vararg tags: CfnTag): Unit = tags(tags.toList())

    public fun build(): software.amazon.awscdk.services.datasync.CfnLocationObjectStorage =
        cdkBuilder.build()
  }

  public companion object {
    public val CFN_RESOURCE_TYPE_NAME: String =
        software.amazon.awscdk.services.datasync.CfnLocationObjectStorage.CFN_RESOURCE_TYPE_NAME

    public operator fun invoke(
      scope: CloudshiftdevConstructsConstruct,
      id: String,
      block: Builder.() -> Unit = {},
    ): CfnLocationObjectStorage {
      val builderImpl = BuilderImpl(CloudshiftdevConstructsConstruct.unwrap(scope), id)
      return CfnLocationObjectStorage(builderImpl.apply(block).build())
    }

    internal fun wrap(cdkObject: software.amazon.awscdk.services.datasync.CfnLocationObjectStorage):
        CfnLocationObjectStorage = CfnLocationObjectStorage(cdkObject)

    internal fun unwrap(wrapped: CfnLocationObjectStorage):
        software.amazon.awscdk.services.datasync.CfnLocationObjectStorage = wrapped.cdkObject as
        software.amazon.awscdk.services.datasync.CfnLocationObjectStorage
  }

  /**
   * Specifies configuration information for a DataSync-managed secret, such as an authentication
   * token or secret key that DataSync uses to access a specific storage location, with a
   * customer-managed AWS KMS key .
   *
   *
   * You can use either `CmkSecretConfig` or `CustomSecretConfig` to provide credentials for a
   * `CreateLocation` request. Do not provide both parameters for the same request.
   *
   *
   * Example:
   *
   * ```
   * // The code below shows an example of how to instantiate this type.
   * // The values are placeholders you should change.
   * import io.cloudshiftdev.awscdk.services.datasync.*;
   * CmkSecretConfigProperty cmkSecretConfigProperty = CmkSecretConfigProperty.builder()
   * .kmsKeyArn("kmsKeyArn")
   * .secretArn("secretArn")
   * .build();
   * ```
   *
   * [Documentation](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-datasync-locationobjectstorage-cmksecretconfig.html)
   */
  public interface CmkSecretConfigProperty {
    /**
     * Specifies the ARN for the customer-managed AWS KMS key that DataSync uses to encrypt the
     * DataSync-managed secret stored for `SecretArn` .
     *
     * DataSync provides this key to AWS Secrets Manager .
     *
     * [Documentation](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-datasync-locationobjectstorage-cmksecretconfig.html#cfn-datasync-locationobjectstorage-cmksecretconfig-kmskeyarn)
     */
    public fun kmsKeyArn(): String? = unwrap(this).getKmsKeyArn()

    /**
     * Specifies the ARN for the DataSync-managed AWS Secrets Manager secret that that is used to
     * access a specific storage location.
     *
     * This property is generated by DataSync and is read-only. DataSync encrypts this secret with
     * the KMS key that you specify for `KmsKeyArn` .
     *
     * [Documentation](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-datasync-locationobjectstorage-cmksecretconfig.html#cfn-datasync-locationobjectstorage-cmksecretconfig-secretarn)
     */
    public fun secretArn(): String? = unwrap(this).getSecretArn()

    /**
     * A builder for [CmkSecretConfigProperty]
     */
    @CdkDslMarker
    public interface Builder {
      /**
       * @param kmsKeyArn Specifies the ARN for the customer-managed AWS KMS key that DataSync uses
       * to encrypt the DataSync-managed secret stored for `SecretArn` .
       * DataSync provides this key to AWS Secrets Manager .
       */
      public fun kmsKeyArn(kmsKeyArn: String)

      /**
       * @param secretArn Specifies the ARN for the DataSync-managed AWS Secrets Manager secret that
       * that is used to access a specific storage location.
       * This property is generated by DataSync and is read-only. DataSync encrypts this secret with
       * the KMS key that you specify for `KmsKeyArn` .
       */
      public fun secretArn(secretArn: String)
    }

    private class BuilderImpl : Builder {
      private val cdkBuilder:
          software.amazon.awscdk.services.datasync.CfnLocationObjectStorage.CmkSecretConfigProperty.Builder
          =
          software.amazon.awscdk.services.datasync.CfnLocationObjectStorage.CmkSecretConfigProperty.builder()

      /**
       * @param kmsKeyArn Specifies the ARN for the customer-managed AWS KMS key that DataSync uses
       * to encrypt the DataSync-managed secret stored for `SecretArn` .
       * DataSync provides this key to AWS Secrets Manager .
       */
      override fun kmsKeyArn(kmsKeyArn: String) {
        cdkBuilder.kmsKeyArn(kmsKeyArn)
      }

      /**
       * @param secretArn Specifies the ARN for the DataSync-managed AWS Secrets Manager secret that
       * that is used to access a specific storage location.
       * This property is generated by DataSync and is read-only. DataSync encrypts this secret with
       * the KMS key that you specify for `KmsKeyArn` .
       */
      override fun secretArn(secretArn: String) {
        cdkBuilder.secretArn(secretArn)
      }

      public fun build():
          software.amazon.awscdk.services.datasync.CfnLocationObjectStorage.CmkSecretConfigProperty
          = cdkBuilder.build()
    }

    private class Wrapper(
      cdkObject: software.amazon.awscdk.services.datasync.CfnLocationObjectStorage.CmkSecretConfigProperty,
    ) : CdkObject(cdkObject),
        CmkSecretConfigProperty {
      /**
       * Specifies the ARN for the customer-managed AWS KMS key that DataSync uses to encrypt the
       * DataSync-managed secret stored for `SecretArn` .
       *
       * DataSync provides this key to AWS Secrets Manager .
       *
       * [Documentation](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-datasync-locationobjectstorage-cmksecretconfig.html#cfn-datasync-locationobjectstorage-cmksecretconfig-kmskeyarn)
       */
      override fun kmsKeyArn(): String? = unwrap(this).getKmsKeyArn()

      /**
       * Specifies the ARN for the DataSync-managed AWS Secrets Manager secret that that is used to
       * access a specific storage location.
       *
       * This property is generated by DataSync and is read-only. DataSync encrypts this secret with
       * the KMS key that you specify for `KmsKeyArn` .
       *
       * [Documentation](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-datasync-locationobjectstorage-cmksecretconfig.html#cfn-datasync-locationobjectstorage-cmksecretconfig-secretarn)
       */
      override fun secretArn(): String? = unwrap(this).getSecretArn()
    }

    public companion object {
      public operator fun invoke(block: Builder.() -> Unit = {}): CmkSecretConfigProperty {
        val builderImpl = BuilderImpl()
        return Wrapper(builderImpl.apply(block).build())
      }

      internal
          fun wrap(cdkObject: software.amazon.awscdk.services.datasync.CfnLocationObjectStorage.CmkSecretConfigProperty):
          CmkSecretConfigProperty = CdkObjectWrappers.wrap(cdkObject) as? CmkSecretConfigProperty ?:
          Wrapper(cdkObject)

      internal fun unwrap(wrapped: CmkSecretConfigProperty):
          software.amazon.awscdk.services.datasync.CfnLocationObjectStorage.CmkSecretConfigProperty
          = (wrapped as CdkObject).cdkObject as
          software.amazon.awscdk.services.datasync.CfnLocationObjectStorage.CmkSecretConfigProperty
    }
  }

  /**
   * Specifies configuration information for a customer-managed Secrets Manager secret where a
   * storage location authentication token or secret key is stored in plain text.
   *
   * This configuration includes the secret ARN, and the ARN for an IAM role that provides access to
   * the secret.
   *
   *
   * You can use either `CmkSecretConfig` or `CustomSecretConfig` to provide credentials for a
   * `CreateLocation` request. Do not provide both parameters for the same request.
   *
   *
   * Example:
   *
   * ```
   * // The code below shows an example of how to instantiate this type.
   * // The values are placeholders you should change.
   * import io.cloudshiftdev.awscdk.services.datasync.*;
   * CustomSecretConfigProperty customSecretConfigProperty = CustomSecretConfigProperty.builder()
   * .secretAccessRoleArn("secretAccessRoleArn")
   * .secretArn("secretArn")
   * .build();
   * ```
   *
   * [Documentation](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-datasync-locationobjectstorage-customsecretconfig.html)
   */
  public interface CustomSecretConfigProperty {
    /**
     * Specifies the ARN for the AWS Identity and Access Management role that DataSync uses to
     * access the secret specified for `SecretArn` .
     *
     * [Documentation](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-datasync-locationobjectstorage-customsecretconfig.html#cfn-datasync-locationobjectstorage-customsecretconfig-secretaccessrolearn)
     */
    public fun secretAccessRoleArn(): String

    /**
     * Specifies the ARN for an AWS Secrets Manager secret.
     *
     * [Documentation](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-datasync-locationobjectstorage-customsecretconfig.html#cfn-datasync-locationobjectstorage-customsecretconfig-secretarn)
     */
    public fun secretArn(): String

    /**
     * A builder for [CustomSecretConfigProperty]
     */
    @CdkDslMarker
    public interface Builder {
      /**
       * @param secretAccessRoleArn Specifies the ARN for the AWS Identity and Access Management
       * role that DataSync uses to access the secret specified for `SecretArn` . 
       */
      public fun secretAccessRoleArn(secretAccessRoleArn: String)

      /**
       * @param secretArn Specifies the ARN for an AWS Secrets Manager secret. 
       */
      public fun secretArn(secretArn: String)
    }

    private class BuilderImpl : Builder {
      private val cdkBuilder:
          software.amazon.awscdk.services.datasync.CfnLocationObjectStorage.CustomSecretConfigProperty.Builder
          =
          software.amazon.awscdk.services.datasync.CfnLocationObjectStorage.CustomSecretConfigProperty.builder()

      /**
       * @param secretAccessRoleArn Specifies the ARN for the AWS Identity and Access Management
       * role that DataSync uses to access the secret specified for `SecretArn` . 
       */
      override fun secretAccessRoleArn(secretAccessRoleArn: String) {
        cdkBuilder.secretAccessRoleArn(secretAccessRoleArn)
      }

      /**
       * @param secretArn Specifies the ARN for an AWS Secrets Manager secret. 
       */
      override fun secretArn(secretArn: String) {
        cdkBuilder.secretArn(secretArn)
      }

      public fun build():
          software.amazon.awscdk.services.datasync.CfnLocationObjectStorage.CustomSecretConfigProperty
          = cdkBuilder.build()
    }

    private class Wrapper(
      cdkObject: software.amazon.awscdk.services.datasync.CfnLocationObjectStorage.CustomSecretConfigProperty,
    ) : CdkObject(cdkObject),
        CustomSecretConfigProperty {
      /**
       * Specifies the ARN for the AWS Identity and Access Management role that DataSync uses to
       * access the secret specified for `SecretArn` .
       *
       * [Documentation](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-datasync-locationobjectstorage-customsecretconfig.html#cfn-datasync-locationobjectstorage-customsecretconfig-secretaccessrolearn)
       */
      override fun secretAccessRoleArn(): String = unwrap(this).getSecretAccessRoleArn()

      /**
       * Specifies the ARN for an AWS Secrets Manager secret.
       *
       * [Documentation](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-datasync-locationobjectstorage-customsecretconfig.html#cfn-datasync-locationobjectstorage-customsecretconfig-secretarn)
       */
      override fun secretArn(): String = unwrap(this).getSecretArn()
    }

    public companion object {
      public operator fun invoke(block: Builder.() -> Unit = {}): CustomSecretConfigProperty {
        val builderImpl = BuilderImpl()
        return Wrapper(builderImpl.apply(block).build())
      }

      internal
          fun wrap(cdkObject: software.amazon.awscdk.services.datasync.CfnLocationObjectStorage.CustomSecretConfigProperty):
          CustomSecretConfigProperty = CdkObjectWrappers.wrap(cdkObject) as?
          CustomSecretConfigProperty ?: Wrapper(cdkObject)

      internal fun unwrap(wrapped: CustomSecretConfigProperty):
          software.amazon.awscdk.services.datasync.CfnLocationObjectStorage.CustomSecretConfigProperty
          = (wrapped as CdkObject).cdkObject as
          software.amazon.awscdk.services.datasync.CfnLocationObjectStorage.CustomSecretConfigProperty
    }
  }

  /**
   * Specifies configuration information for a DataSync-managed secret, such as an authentication
   * token or set of credentials that DataSync uses to access a specific transfer location.
   *
   * DataSync uses the default AWS -managed KMS key to encrypt this secret in AWS Secrets Manager .
   *
   * Example:
   *
   * ```
   * // The code below shows an example of how to instantiate this type.
   * // The values are placeholders you should change.
   * import io.cloudshiftdev.awscdk.services.datasync.*;
   * ManagedSecretConfigProperty managedSecretConfigProperty = ManagedSecretConfigProperty.builder()
   * .secretArn("secretArn")
   * .build();
   * ```
   *
   * [Documentation](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-datasync-locationobjectstorage-managedsecretconfig.html)
   */
  public interface ManagedSecretConfigProperty {
    /**
     * Specifies the ARN for an AWS Secrets Manager secret.
     *
     * [Documentation](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-datasync-locationobjectstorage-managedsecretconfig.html#cfn-datasync-locationobjectstorage-managedsecretconfig-secretarn)
     */
    public fun secretArn(): String

    /**
     * A builder for [ManagedSecretConfigProperty]
     */
    @CdkDslMarker
    public interface Builder {
      /**
       * @param secretArn Specifies the ARN for an AWS Secrets Manager secret. 
       */
      public fun secretArn(secretArn: String)
    }

    private class BuilderImpl : Builder {
      private val cdkBuilder:
          software.amazon.awscdk.services.datasync.CfnLocationObjectStorage.ManagedSecretConfigProperty.Builder
          =
          software.amazon.awscdk.services.datasync.CfnLocationObjectStorage.ManagedSecretConfigProperty.builder()

      /**
       * @param secretArn Specifies the ARN for an AWS Secrets Manager secret. 
       */
      override fun secretArn(secretArn: String) {
        cdkBuilder.secretArn(secretArn)
      }

      public fun build():
          software.amazon.awscdk.services.datasync.CfnLocationObjectStorage.ManagedSecretConfigProperty
          = cdkBuilder.build()
    }

    private class Wrapper(
      cdkObject: software.amazon.awscdk.services.datasync.CfnLocationObjectStorage.ManagedSecretConfigProperty,
    ) : CdkObject(cdkObject),
        ManagedSecretConfigProperty {
      /**
       * Specifies the ARN for an AWS Secrets Manager secret.
       *
       * [Documentation](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-datasync-locationobjectstorage-managedsecretconfig.html#cfn-datasync-locationobjectstorage-managedsecretconfig-secretarn)
       */
      override fun secretArn(): String = unwrap(this).getSecretArn()
    }

    public companion object {
      public operator fun invoke(block: Builder.() -> Unit = {}): ManagedSecretConfigProperty {
        val builderImpl = BuilderImpl()
        return Wrapper(builderImpl.apply(block).build())
      }

      internal
          fun wrap(cdkObject: software.amazon.awscdk.services.datasync.CfnLocationObjectStorage.ManagedSecretConfigProperty):
          ManagedSecretConfigProperty = CdkObjectWrappers.wrap(cdkObject) as?
          ManagedSecretConfigProperty ?: Wrapper(cdkObject)

      internal fun unwrap(wrapped: ManagedSecretConfigProperty):
          software.amazon.awscdk.services.datasync.CfnLocationObjectStorage.ManagedSecretConfigProperty
          = (wrapped as CdkObject).cdkObject as
          software.amazon.awscdk.services.datasync.CfnLocationObjectStorage.ManagedSecretConfigProperty
    }
  }
}
